Модуль создан в соответствии с методологией CS-Cart API(максимально приближен)
При установке будут созданы два дополнительных поля external_id в таблицах product_features, product_feature_variants
Для возможности сопоставления характеристик и их вариантов по внешнему ключу(ID)
---------------------------------------------------------------------------------

Настройки модуля:
Проверка на уникальность названий при создании - Будут проверяться названия создаваемых элементов на существующие совпадения во всей БД, у характеристик проверяется только основное название.
Запросы только от Администратора - Запросы будут приниматься только от API пользователя с правами администратора.
Запросы только на HTTPS - сайт должен работать только по протоколу HTTPS
Включить запись ошибок обмена в лог - Все не критичные ошибки(не останавливающие работу скрипта) будут записаны в файл /app/addons/ee_2bstock/Tygh/Addons/EE2bstock/logs/errors.txt

Так же в настройках имеется таб Крайний запрос к модулю, где можно увидеть и запрос и ответ модуля на него. 
-----------------------------------------------------------------------------------

Авторизация:
Для начала необходимо создать API ключ в админ. панеле CS-Cart
И далее использовать его при обращении к модулю совместно с авторизацией Basic HTTP
Параметры user - почта пользователя и api_key - ключ API так же могут быть переданы в $_GET или $_POST массиве, что крайне не рекомендуется!
Модуль ожидает в заголовке Content-Type: application/json;
-----------------------------------------------------------------------------------

Поддерживаемые запросы:
В зависимости от метода запроса http_method (GET, PUT, POST, DELETE) будут вызваны соответствующие им функции (get, update, create, dell)

Примеры GET запросов:
https://example.com/2bstock/features - пример запроса всех характеристик. Если в параметрах запроса будут переданы external_id или id характеристики,
то модуль вернёт её вместе со всеми её вариантами. Иначе будет возвращён массив со всеми характеристиками из CS-Cart

https://example.com/2bstock/features/variants - если переданы external_id или id варианта то будет возвращён массив с вариантом характеристики,
иначе будут возвращены все варианты от всех характеристик из CS-Cart

-----ХАРАКТЕРИСТИКИ----
#######################
Для методов PUT, POST ожидаются следующие поля:
При PUT запросах один из параметров feature_id или external_id должен быть обязательно передан
Body [
        "http_method", - ОБЯЗАТЕЛЬНЫЙ ДЛЯ ЗАПРОСА ПАРАМЕТР
		"values" : [
			{
				"feature_id",
				"company_id",  - ОБЯЗАТЕЛЬНЫЙ ДЛЯ ЗАПРОСА POST ПАРАМЕТР
				"feature_type",
				"parent_id",
				"display_on_product",
				"display_on_catalog",
				"display_on_header",
				"description", - меняет название на сайте
				"internal_name", - Добавлено поле, для изменения названия в админке   - ОБЯЗАТЕЛЬНЫЙ ДЛЯ ЗАПРОСА POST ПАРАМЕТР
				"lang_code",   - ОБЯЗАТЕЛЬНЫЙ ДЛЯ ЗАПРОСА POST ПАРАМЕТР
				"prefix",
				"suffix",
				"categories_path",
				"full_description",
				"status",
				"comparison",
				"position",
				"external_id" - при обновлении(PUT запрос) проверяем если в БД у этого объекта external_id пустое то заполняем его значением из запроса
			},
		],
	]

Для метода DELETE ожидаются следующие поля:
Возможно удаление только по одной характеристике за запрос.
Body [
		"http_method", - ОБЯЗАТЕЛЬНЫЙ ДЛЯ ЗАПРОСА ПАРАМЕТР
		"feature_id" - удалит характеристику + все её вариации и привязки к товарам
	]
	
-----ВАРИАЦИИ-----
##################
Для метода PUT(обновление) ожидаются следующие поля:
При PUT запросах один из параметров variant_id или external_id должен быть обязательно передан
Body [
		"http_method", - ОБЯЗАТЕЛЬНЫЙ ДЛЯ ЗАПРОСА ПАРАМЕТР
		"values" : [
			{
				"variant_id", - обязательно
				"variant",
				"description",
				"page_title",
				"meta_keywords",
				"meta_description",
				"lang_code",
				"url",
				"color",
				"position",
				"external_id"  - при обновлении(PUT запрос) проверяем если в БД у этого объекта external_id пустое то заполняем его значением из запроса
			},
		],
	]
	
Для метода POST(добавление) ожидаются следующие поля:
Body [
		"http_method", - ОБЯЗАТЕЛЬНЫЙ ДЛЯ ЗАПРОСА ПАРАМЕТР
		"values" : [
			{
				"feature_id", - ОБЯЗАТЕЛЬНЫЙ ДЛЯ ЗАПРОСА POST ПАРАМЕТР
				"variant",
				"description",
				"page_title",
				"meta_keywords",
				"meta_description",
				"lang_code", - ОБЯЗАТЕЛЬНЫЙ ДЛЯ ЗАПРОСА POST ПАРАМЕТР
				"url",
				"color",
				"position",
				"external_id"
			},
		],
	]
	

Для метода DELETE ожидаются следующие поля:
Возможно удаление только по одному варианту за запрос.
Body [
		"http_method", - ОБЯЗАТЕЛЬНЫЙ ДЛЯ ЗАПРОСА ПАРАМЕТР
		"variant_id" - удалит вариант и все его привязки к товарам
	]